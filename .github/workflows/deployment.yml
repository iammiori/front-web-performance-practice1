name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    env:
      DEPLOY_START_MESSAGE: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "üöÄ Frontend Î∞∞Ìè¨ ÏãúÏûë",
                "emoji": true
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*ÌôòÍ≤Ω:*\ndev"
                },
                {
                  "type": "mrkdwn", 
                  "text": "*Ïª§Î∞ã:*\n`${{ github.sha }}`"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Î∏åÎûúÏπò:*\n${{ github.ref_name }}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*ÏûëÏóÖÏûê:*\n${{ github.actor }}"
                }
              ]
            }
          ]
        }
      DEPLOY_COMPLETE_MESSAGE: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "${{ job.status == 'success' && '‚úÖ Frontend Î∞∞Ìè¨ ÏôÑÎ£å' || '‚ùå Frontend Î∞∞Ìè¨ Ïã§Ìå®' }}",
                "emoji": true
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*ÌôòÍ≤Ω:*\ndev"
                },
                {
                  "type": "mrkdwn",
                  "text": "*ÏÉÅÌÉú:*\n${{ job.status == 'success' && 'ÏÑ±Í≥µ üéâ' || 'Ïã§Ìå® ‚ö†Ô∏è' }}"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Ïª§Î∞ã:*\n`${{ github.sha }}`"
                },
                {
                  "type": "mrkdwn",
                  "text": "*ÏûëÏóÖÏûê:*\n${{ github.actor }}"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Î∏åÎûúÏπò:*\n${{ github.ref_name }}"
                }
              ]
            }
          ]
        }

    steps:
      - uses: actions/checkout@v4
      
      - name: Send deployment start notification
        uses: curl/actions/curl@v1
        with:
          args: -X POST -H 'Content-type: application/json' --data "$DEPLOY_START_MESSAGE" ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        run: |
          aws s3 sync . s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --cache-control "max-age=31536000" \
            --exclude ".git/*" \
            --exclude ".github/*" \
            --exclude "README.md"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_ID }} \
            --paths "/*"

      - name: Send deployment complete notification
        if: always()
        uses: curl/actions/curl@v1
        with:
          args: -X POST -H 'Content-type: application/json' --data "$DEPLOY_COMPLETE_MESSAGE" ${{ secrets.SLACK_WEBHOOK_URL }}